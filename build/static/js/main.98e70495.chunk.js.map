{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","react_default","a","createElement","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","Order","renderOrder","key","fish","_this","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","this","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","protoTypes","PropType","func","isRequired","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","samplesFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.98e70495.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Example Stateless Functional Component\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>he\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">Of</span>\n//             <span className=\"the\">The</span>he\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    //Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count} </span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // Refresh the form one is submit\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\">\n          <option value=\"available\" ref={this.statusRef}>\n            Fresh!\n          </option>\n          <option value=\"unavailable\" ref={this.statusRef}>\n            Sold Out!\n          </option>\n        </select>\n        <textarea\n          name=\"desc\"\n          ref={this.descRef}\n          type=\"text\"\n          placeholder=\"Description\"\n        />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          type=\"text\"\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropType from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With Github\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.protoTypes = {\n  authenticate: PropType.func.isRequired\n};\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyD9VWPmDJ-BA8hvCZCif5pjQu8iP_oBVeo\",\n  authDomain: \"catch-of-the-day-course-939e2.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-course-939e2.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebase.database());\n\n//This is a named export\nexport { firebaseApp };\n\n//This is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Clain it if thre no owner\n    if (!store.owner) {\n      //save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3 .Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Loggin out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner of the Store!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  }\n\n  render() {\n    // This take this.props.details.* whatever is in the brackets\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index) }>{isAvailable ? 'Add To Order': 'Sold out!'}</button>\n      </li>\n    );\n  }\n}\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport samplesFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    //First reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({\n      fishes: fishes //If you put only \"fishes\" is also valid\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes: fishes });\n  };\n\n  deleteFish = key => {\n    // 1. Take a copy of the state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. Update state\n    this.setState({ fishes: fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: samplesFishes\n    });\n  };\n\n  addToOrder = key => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    //3. Call setSatet to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Remove that from order\n    delete order[key];\n    //3. Call setSatet to update our state object\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline={\"Fresh Seafood Market\"} />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    // 1.Stop the form from submitting\n    event.preventDefault();\n    // 2.get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        {/* This is a store picker*/}\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store </button>\n      </form>\n    );\n  }\n}\nexport default StorePicker;\n","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!???</h2>\n    </div>\n);\nexport default NotFound;","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\nimport React from \"react\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport Router from './components/Router';\nimport './css/style.css';  //Import CSS\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}